{"remainingRequest":"/Users/zhaofei/github/skyscraperNFT/chat/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/zhaofei/github/skyscraperNFT/chat/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/zhaofei/github/skyscraperNFT/chat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhaofei/github/skyscraperNFT/chat/src/views/lanhu_shouye/index.vue?vue&type=template&id=811c9d46&scoped=true&","dependencies":[{"path":"/Users/zhaofei/github/skyscraperNFT/chat/src/views/lanhu_shouye/index.vue","mtime":1645856648000},{"path":"/Users/zhaofei/github/skyscraperNFT/chat/node_modules/cache-loader/dist/cjs.js","mtime":1644901651684},{"path":"/Users/zhaofei/github/skyscraperNFT/chat/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1644901716650},{"path":"/Users/zhaofei/github/skyscraperNFT/chat/node_modules/cache-loader/dist/cjs.js","mtime":1644901651684},{"path":"/Users/zhaofei/github/skyscraperNFT/chat/node_modules/vue-loader/lib/index.js","mtime":1644901716650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}